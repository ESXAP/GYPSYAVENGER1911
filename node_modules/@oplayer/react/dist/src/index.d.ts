/// <reference types="react" />
import type { PlayerEvent, PlayerOptions, PlayerPlugin, Source } from '@oplayer/core';
import Player from '@oplayer/core';
export interface ReactOPlayerProps extends PlayerOptions {
    playing?: boolean;
    duration?: number;
    aspectRatio?: number;
    plugins?: PlayerPlugin[];
    onEvent?: (e: PlayerEvent) => void;
}
declare const ReactOPlayer: import("react").ForwardRefExoticComponent<ReactOPlayerProps & {
    source?: Source | Promise<Source> | undefined;
} & import("react").RefAttributes<Player<Record<string, any>>>>;
export declare function usePrevious<T>(value: T): T | undefined;
export * from '@oplayer/core';
export default ReactOPlayer;
//# sourceMappingURL=index.d.ts.map